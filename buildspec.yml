version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - echo Installing dependencies...
      - cd lambda
      - npm install || echo "No dependencies to install"
  
  pre_build:
    commands:
      - echo Pre-build phase...
      
      # List the contents of the current directory to verify where you are
      - echo "Listing the files in the current directory for debugging..."
      - cd ..
      - ls -al  # This will list all files in the current directory
      - echo "Checking if 'scripts' folder exists"
      - ls -al ./scripts  # This will list contents in 'scripts' folder if it exists

      # Ensure the check_env_vars.sh script is executable
      - echo "Trying to chmod the script"
      - sudo chmod +x ./scripts/check_env_vars.sh  # Ensure the script is executable (update path)
      
      # Dynamically call the check_env_vars.sh script for the specific deploy script
      - echo "Running check_env_vars.sh for deploy.sh"
      - . ./scripts/check_env_vars.sh ./scripts/deploy.sh  # Pass the deploy.sh script name

  build:
    commands:
      - echo Build phase...
      - sudo chmod +x ./scripts/deploy.sh  # Ensure the deploy script is executable
      - . ./scripts/deploy.sh  # Source the deploy script
      - . ./scripts/deploy2.sh  # Source the deploy script
      - zip -r ../lambda.zip .  # Optionally zip the lambda code
  
artifacts:
  files:
    - lambda.zip  # This will be the artifact if needed for Lambda function update (optional)
  
cache:
  paths:
    - node_modules/**/*  # Cache node modules to speed up future builds
